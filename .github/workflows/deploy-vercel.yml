name: Deploy to Vercel

on:
  push:
    branches: [ main, develop, feature/vercel-railway-deployment ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.19.0'
  Emscripten_VERSION: '3.1.45'

jobs:
  validate-and-deploy-frontend:
    name: Validate & Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v13
      with:
        version: ${{ env.Emscripten_VERSION }}
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run frontend validation
      working-directory: ./frontend
      run: |
        chmod +x scripts/validate.sh
        ./scripts/validate.sh
        
    - name: Deploy to Vercel
      working-directory: ./frontend
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: |
        # Install Vercel CLI
        npm install -g vercel@latest
        
        # Deploy to Vercel
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # Preview deployment for PRs
          vercel --token $VERCEL_TOKEN --prod
        else
          # Production deployment for pushes to main/develop
          vercel --token $VERCEL_TOKEN --prod
        fi
        
    - name: Comment PR with deployment URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = `https://frontend-${{ github.sha }}.vercel.app`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸŽ‰ **Frontend deployed to Vercel!**\n\nðŸ”— **Preview URL:** ${deploymentUrl}\n\nâœ… All validations passed\n\nThis preview will be available until the PR is closed.`
          });
